<%# Full page refresh approach - simpler but effective %>

<%# Update the visualization %>
<turbo-stream action="replace" target="server-rack-vizualization">
  <template>
    <%= render partial: "server_racks/server_vizualization", locals: { 
      server_rack: @server_rack, 
      rack_components: @rack_components 
    } %>
  </template>
</turbo-stream>

<%# Update the components list %>
<turbo-stream action="replace" target="rack-components-list">
  <template>
    <div id="rack-components-list">
      <% if @server_rack.rack_components.any? %>
        <div class="space-y-4">
          <% 
            # Define colors for rack positions (1-based)
            position_colors = {
              even: "bg-gray-50 dark:bg-gray-800",
              odd: "bg-white dark:bg-gray-900"
            }
          %>
          
          <div class="overflow-hidden rounded-lg border border-gray-300 dark:border-gray-600">
            <table class="min-w-full divide-y divide-gray-300 dark:divide-gray-600">
              <thead class="bg-gray-100 dark:bg-gray-800">
                <tr>
                  <th scope="col" class="py-2 px-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Position</th>
                  <th scope="col" class="py-2 px-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Component</th>
                  <th scope="col" class="py-2 px-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Details</th>
                  <th scope="col" class="py-2 px-3 text-right text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Actions</th>
                </tr>
              </thead>
              <tbody class="divide-y divide-gray-200 dark:divide-gray-700">
                <% @rack_components_by_position.each do |position, components| %>
                  <% components.each_with_index do |rack_component, index| %>
                    <tr class="<%= position.odd? ? position_colors[:odd] : position_colors[:even] %>">
                      <td class="py-3 px-3 whitespace-nowrap text-sm">
                        <% if index == 0 %> <!-- Only show position for first component in this position -->
                          <span class="font-medium"><%= position %>U</span>
                          <% if rack_component.component.height > 1 %>
                            <span class="text-gray-500 text-xs block">
                              spans <%= rack_component.component.height %>U 
                              (to position <%= position + rack_component.component.height - 1 %>)
                            </span>
                          <% end %>
                        <% end %>
                      </td>
                      <td class="py-3 px-3 whitespace-nowrap">
                        <div class="flex items-center">
                          <div class="h-6 w-6 rounded-full border mr-2"
                               style="background-color: <%= rack_component.component.color || '#3B82F6' %>; border-color: <%= adjust_color_lightness(rack_component.component.color || '#3B82F6', 30) %>;">
                          </div>
                          <div class="text-sm font-medium">
                            <%= link_to rack_component.component.name, component_path(rack_component.component), class: "hover:text-blue-500" %>
                          </div>
                        </div>
                      </td>
                      <td class="py-3 px-3 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400">
                        <%= rack_component.component.height %>U â€¢ <%= rack_component.component.depth %> inches
                      </td>
                      <td class="py-3 px-3 whitespace-nowrap text-right">
                        <%= button_to "Remove", 
                          server_rack_rack_component_path(@server_rack, rack_component), 
                          method: :delete, 
                          class: "inline-flex items-center px-2.5 py-1.5 border border-transparent text-xs font-medium rounded text-red-700 bg-red-100 hover:bg-red-200 dark:text-red-100 dark:bg-red-800 dark:hover:bg-red-700 focus:outline-none",
                          form: { data: { turbo_confirm: "Are you sure you want to remove #{rack_component.component.name} from position #{rack_component.position_y}?" } } %>
                      </td>
                    </tr>
                  <% end %>
                <% end %>
              </tbody>
            </table>
          </div>
        </div>
      <% else %>
        <p class="text-center py-8 text-gray-500">No components added to this rack yet.</p>
      <% end %>
    </div>
  </template>
</turbo-stream>

<%# Show a notification %>
<turbo-stream action="append" target="notifications">
  <template>
    <div class="py-2 px-3 bg-green-50 mb-5 text-green-500 font-medium rounded-md animate-fade-in transition-opacity" 
         data-controller="notification" 
         data-notification-target="notice">
      Component position updated successfully.
      <button type="button" class="float-right" data-action="notification#close">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
        </svg>
      </button>
    </div>
  </template>
</turbo-stream>